@mixin createUtilityClasses(
  $prop-abbr,
  $auxProp-abbr,
  $abbr-value,
  $headOnly: false,
  $bpPrefix: ''
) {
  @each $prop, $abbr in $prop-abbr {
    @if ($headOnly) {
      @each $stpAbbr, $value in $abbr-value {
        @if ($bpPrefix == '') {
          @if ($stpAbbr== '') {
            .#{$abbr} {
              #{$prop}: $value;
            }
          } @else {
            .#{$abbr}-#{$stpAbbr} {
              #{$prop}: $value;
            }
          }
        } @else {
          @if ($stpAbbr== '') {
            .#{$bpPrefix}-#{$abbr} {
              #{$prop}: $value !important;
            }
          } @else {
            .#{$bpPrefix}-#{$abbr}-#{$stpAbbr} {
              #{$prop}: $value !important;
            }
          }
        }
      }
    } @else {
      @each $auxProp, $auxAbbr in $auxProp-abbr {
        @each $stpAbbr, $value in $abbr-value {
          @if ($bpPrefix == '') {
            .#{$abbr}#{$auxAbbr}-#{$stpAbbr} {
              #{$prop}-#{$auxProp}: $value;
            }
          } @else {
            .#{$bpPrefix}-#{$abbr}#{$auxAbbr}-#{$stpAbbr} {
              #{$prop}-#{$auxProp}: $value !important;
            }
          }
        }
      }
    }
  }
}
@mixin createSimpleUtilityClasses($prop-abbr, $abbr-value, $bpPrefix: '') {
  @each $prop, $abbr in $prop-abbr {
    @each $stpAbbr, $value in $abbr-value {
      @if ($stpAbbr == '') {
        @if ($bpPrefix == '') {
          .#{$abbr} {
            #{$prop}: $value;
          }
        } @else {
          .#{$bpPrefix}-#{$abbr} {
            #{$prop}: $value !important;
          }
        }
      } @else {
        @if ($bpPrefix == '') {
          .#{$abbr}-#{$stpAbbr} {
            #{$prop}: $value;
          }
        } @else {
          .#{$bpPrefix}-#{$abbr}-#{$stpAbbr} {
            #{$prop}: $value !important;
          }
        }
      }
    }
  }
}

// spacing
$spacing-prop-abbr: (
  'padding': 'p',
  'margin': 'm',
);
$spacing-auxProp-abbr: (
  'top': 't',
  'bottom': 'b',
  'block': 'y',
  'right': 'r',
  'left': 'l',
  'inline': 'x',
);
$spacing-abbr-value: (
  '1': 4px,
  '2': 8px,
  '3': 12px,
  '4': 16px,
  '5': 20px,
  '6': 24px,
  '7': 28px,
  '8': 32px,
  '9': 36px,
  '10': 40px,
  '11': 44px,
  '12': 48px,
  '13': 52px,
  '14': 56px,
  '15': 60px,
  '16': 64px,
);

// border
$border-prop-abbr: (
  'border': 'b',
);
$border-widthProp-abbr: (
  'width': '-t',
  'top-width': 't-t',
  'bottom-width': 'b-t',
  'block-width': 'y-t',
  'right-width': 'r-t',
  'left-width': 'l-t',
  'inline-width': 'x-t',
);
$border-widthAbbr-value: (
  '1': 1px,
  '2': 2px,
  '3': 3px,
  '4': 4px,
  '5': 5px,
  '6': 6px,
  '7': 7px,
  '8': 8px,
  '9': 9px,
  '10': 10px,
  '11': 11px,
  '12': 12px,
  '13': 13px,
  '14': 14px,
  '15': 15px,
  '16': 16px,
);
$border-radiusProp-abbr: (
  'radius': '-r',
  'top-left-radius': 'tl-r',
  'top-right-radius': 'tr-r',
  'bottom-left-radius': 'bl-r',
  'bottom-right-radius': 'br-r',
);
$border-radiusAbbr-value: (
  '1': 4px,
  '2': 8px,
  '3': 12px,
  '4': 16px,
  '5': 20px,
  '6': 24px,
  '7': 28px,
  '8': 32px,
  '9': 36px,
  '10': 40px,
  '11': 44px,
  '12': 48px,
  '13': 52px,
  '14': 56px,
  '15': 60px,
  '16': 64px,
  'full': 9999px,
);
$border-styleProp-abbr: (
  'style': '-style',
);
$border-styleAbbr-value: (
  'solid': 'solid',
  'dashed': 'dashed',
  'dotted': 'dotted',
  'double': 'double',
  'hidden': 'hidden',
  'none': 'none',
);

// aspect ratio
$aspectRatio-prop-abbr: (
  'aspect': 'aspect',
);
$aspectRatio-auxProp-abbr: (
  'ratio': '',
);
$aspectRatio-abbr-value: (
  '1x1': #{'1 / 1'},
  '1x2': #{'1 / 2'},
  '1x2-v': #{'2 / 1'},
  '3x4': #{'3 / 4'},
  '3x4-v': #{'4 / 3'},
  '16x9': #{'16 / 9'},
  '16x9-v': #{'9 / 16'},
  '297x210': #{'297 / 210'},
  '297x210-v': #{'210 / 297'},
);

// hidden
$hidden-prop-abbr: (
  'display': 'hidden',
);
$hidden-auxProp-abbr: (
  '': '',
);
$hidden-abbr-value: (
  '': none,
);

// object
$object-prop-abbr: (
  'object': 'object',
);
$object-fitProp-abbr: (
  'fit': '',
);
$object-fitAbbr-value: (
  'contain': contain,
  'cover': cover,
  'fill': fill,
);
$object-positionProp-abbr: (
  'position': '',
);
$object-positionAbbr-value: (
  'c': center,
  't': top,
  'r': right,
  'b': bottom,
  'l': left,
  'tr': top right,
  'tl': top left,
  'tc': top center,
  'cr': center right,
  'cl': center left,
  'br': bottom right,
  'bl': bottom left,
  'bc': bottom center,
);

@mixin createUtilityClassesWithPrefix($bpPrefix: '') {
  // spacing
  @include createUtilityClasses(
    $spacing-prop-abbr,
    $spacing-auxProp-abbr,
    $spacing-abbr-value,
    true,
    $bpPrefix: $bpPrefix
  );
  @include createUtilityClasses(
    $spacing-prop-abbr,
    $spacing-auxProp-abbr,
    $spacing-abbr-value,
    false,
    $bpPrefix: $bpPrefix
  );
  // border radius
  @include createUtilityClasses(
    $border-prop-abbr,
    $border-radiusProp-abbr,
    $border-radiusAbbr-value,
    $bpPrefix: $bpPrefix
  );
  // border width
  @include createUtilityClasses(
    $border-prop-abbr,
    $border-widthProp-abbr,
    $border-widthAbbr-value,
    $bpPrefix: $bpPrefix
  );
  // border style
  @include createUtilityClasses(
    $border-prop-abbr,
    $border-styleProp-abbr,
    $border-styleAbbr-value,
    $bpPrefix: $bpPrefix
  );
  // aspect ratio
  @include createUtilityClasses(
    $aspectRatio-prop-abbr,
    $aspectRatio-auxProp-abbr,
    $aspectRatio-abbr-value,
    $bpPrefix: $bpPrefix
  );
  // hidden
  // @include createSimpleUtilityClasses(
  //   $hidden-prop-abbr,
  //   $hidden-abbr-value,
  //   $bpPrefix: $bpPrefix
  // );
  @include createUtilityClasses(
    $hidden-prop-abbr,
    $hidden-auxProp-abbr,
    $hidden-abbr-value,
    true,
    $bpPrefix: $bpPrefix
  );
  // object fit
  @include createUtilityClasses(
    $object-prop-abbr,
    $object-fitProp-abbr,
    $object-fitAbbr-value,
    $bpPrefix: $bpPrefix
  );
  // object position
  @include createUtilityClasses(
    $object-prop-abbr,
    $object-positionProp-abbr,
    $object-positionAbbr-value,
    $bpPrefix: $bpPrefix
  );
}
