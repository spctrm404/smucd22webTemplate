// hidden
// padding
// oject-fit
// fullHeight
// autoLayout
// fixed
// fill
// hug
// max
// min

$bpTbl: 600px;
$bpLpt: 905px;
$bpDsk: 1240px;
$bpDskStable: 1440px;

@mixin font($size, $hierarchy) {
  $fontSize: 12px;
  $fontWeight: 400;
  $lineHeight: 16px;
  $letterSpacing: 0.4px;
  @if ($size == 0) {
    // s
    @if ($hierarchy == 1) {
      // label
      $fontSize: 11px;
      $fontWeight: 500;
      $letterSpacing: 0.5px;
    } @else if ($hierarchy == 2) {
      // title
      $fontSize: 14px;
      $fontWeight: 500;
      $lineHeight: 20px;
      $letterSpacing: 0.1px;
    } @else if ($hierarchy == 3) {
      // headline
      $fontSize: 24px;
      $lineHeight: 32px;
      $letterSpacing: 0px;
    } @else if ($hierarchy == 4) {
      // display
      $fontSize: 36px;
      $lineHeight: 44px;
      $letterSpacing: 0px;
    }
  } @else if ($size == 1) {
    //m
    $fontSize: 14px;
    $lineHeight: 20px;
    $letterSpacing: 0.25px;
    @if ($hierarchy == 1) {
      // label
      $fontSize: 12px;
      $fontWeight: 500;
      $lineHeight: 16px;
      $letterSpacing: 0.5px;
    } @else if ($hierarchy == 2) {
      // title
      $fontSize: 16px;
      $fontWeight: 500;
      $lineHeight: 24px;
      $letterSpacing: 0.1px;
    } @else if ($hierarchy == 3) {
      // headline
      $fontSize: 28px;
      $lineHeight: 36px;
      $letterSpacing: 0px;
    } @else if ($hierarchy == 4) {
      // display
      $fontSize: 45px;
      $lineHeight: 52px;
      $letterSpacing: 0px;
    }
  } @else if ($size == 2) {
    //l
    $fontSize: 16px;
    $lineHeight: 24px;
    $letterSpacing: 0.5px;
    @if ($hierarchy == 1) {
      // label
      $fontSize: 14px;
      $fontWeight: 500;
      $lineHeight: 20px;
      $letterSpacing: 0.1px;
    } @else if ($hierarchy == 2) {
      // title
      $fontSize: 22px;
      $lineHeight: 28px;
      $letterSpacing: 0px;
    } @else if ($hierarchy == 3) {
      // headline
      $fontSize: 32px;
      $lineHeight: 40px;
      $letterSpacing: 0px;
    } @else if ($hierarchy == 4) {
      // display
      $fontSize: 57px;
      $lineHeight: 64px;
      $letterSpacing: -0.25px;
    }
  }
  font-size: $fontSize;
  font-weight: $fontWeight;
  line-height: $lineHeight;
  letter-spacing: $letterSpacing;
}

@mixin applyFontToTag($size) {
  :root,
  p {
    @include font($size, 0);
  }

  @for $i from 1 through 6 {
    h#{$i} {
      @include font($size, max(0, 5 - $i));
    }
  }
}

@mixin gridItemModClasses($prefix: '', $column) {
  @if ($prefix== '') {
    @for $i from 1 through 12 {
      $calibratedI: $i;
      @if ($i > $column) {
        $calibratedI: $column;
      }
      > .gridW-#{$i} {
        grid-column: auto / span $calibratedI;
      }
    }
  } @else {
    @for $i from 1 through $column {
      > .#{$prefix}-gridX-#{$i} {
        grid-column-start: $i;
      }
      > .#{$prefix}-gridW-#{$i} {
        grid-column: auto / span $i;
      }
    }
  }
}

@mixin flexItemWidthDistribution($column, $columnGap) {
  @for $i from 1 through 12 {
    & > *:first-child:nth-last-child(#{$i}),
    & > *:first-child:nth-last-child(#{$i}) ~ * {
      @if ($i > $column) {
        width: calc((100% - $columnGap * ($column - 1)) / $column);
      } @else {
        $calibratedI: (($i - 1) % $column) + 1;
        width: calc((100% - $columnGap * ($calibratedI - 1)) / $calibratedI);
      }
    }
  }
}

@mixin flexItemModClasses($prefix: '', $column, $columnGap) {
  @if ($prefix== '') {
    @for $divisor from 1 through $column {
      @for $dividend from 1 through $divisor {
        & > .flexW-#{$dividend}x#{$divisor} {
          width: calc(
            ((100% - $columnGap * ($divisor - 1)) / $divisor) *
              $dividend +
              $columnGap *
              ($dividend - 1)
          ) !important;
        }
      }
    }
  } @else {
    @for $divisor from 1 through $column {
      @for $dividend from 1 through $divisor {
        & > .#{$prefix}-flexW-#{$dividend}x#{$divisor} {
          width: calc(
            ((100% - $columnGap * ($divisor - 1)) / $divisor) *
              $dividend +
              $columnGap *
              ($dividend - 1)
          ) !important;
        }
      }
    }
  }
}

@mixin mediaQuery(
  $bpName,
  $width: auto,
  $fontSize,
  $column,
  $columnGap,
  $rowGap,
  $marginInline,
  $displayMargin: true
) {
  @include applyFontToTag($fontSize);
  .section {
    .container {
      width: $width;
      .frame {
        row-gap: $rowGap;
        column-gap: $columnGap;
        margin-inline: $marginInline;
        &--grid {
          grid-template-columns: repeat(
            $column,
            calc((100% - $columnGap * ($column - 1)) / $column)
          );
        }
        @include gridItemModClasses($column: $column);
        @include gridItemModClasses($bpName, $column);
        &--flex {
          @include flexItemWidthDistribution($column, $columnGap);
          @include flexItemModClasses($column: $column, $columnGap: $columnGap);
          @include flexItemModClasses($bpName, $column, $columnGap);
        }
      }
    }
    @if ($displayMargin == false) {
      .margin {
        display: none;
      }
    }
  }
}

@mixin hnd {
  @media (max-width: #{$bpTbl - 1px}) {
    @include mediaQuery(
      $bpName: 'hnd',
      $width: 100%,
      $fontSize: 1,
      $column: 4,
      $columnGap: 16px,
      $rowGap: 16px,
      $marginInline: 16px,
      $displayMargin: false
    );
  }
}

@mixin tbl {
  @media (min-width: #{$bpTbl}) and (max-width: #{$bpLpt - 1px}) {
    @include mediaQuery(
      $bpName: 'tbl',
      $width: 100%,
      $fontSize: 2,
      $column: 8,
      $columnGap: 24px,
      $rowGap: 24px,
      $marginInline: 32px,
      $displayMargin: false
    );
  }
}

@mixin lpt {
  @media (min-width: #{$bpLpt}) and (max-width: #{$bpDsk - 1px}) {
    @include mediaQuery(
      $bpName: 'lpt',
      $width: 904px,
      $fontSize: 2,
      $column: 12,
      $columnGap: 24px,
      $rowGap: 24px,
      $marginInline: 32px
    );
  }
}
@mixin dsk {
  @media (min-width: #{$bpDsk}) and (max-width: #{$bpDskStable - 1px}) {
    @include mediaQuery(
      $bpName: 'dsk',
      $width: 100%,
      $fontSize: 2,
      $column: 12,
      $columnGap: 24px,
      $rowGap: 24px,
      $marginInline: calc(84 / 1440 * 100%)
    );
  }
}

@mixin dskStable {
  $column: 12;
  $columnGap: 24px;
  $rowGap: 24px;
  $margin: 84px;
  $fontSize: 2;
  @media (min-width: #{$bpDskStable}) {
    @include mediaQuery(
      $bpName: 'dsk',
      $width: 1440px,
      $fontSize: 2,
      $column: 12,
      $columnGap: 24px,
      $rowGap: 24px,
      $marginInline: 84px
    );
  }
}
