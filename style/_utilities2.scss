$trblPropNPrefix: (
  'padding': 'p',
  'margin': 'm',
);
$trblPropNAppendix: (
  'top': 't',
  'bottom': 'b',
  'block': 'y',
  'right': 'r',
  'left': 'l',
  'inline': 'x',
);
$unit: 4px;
@each $property, $prefix in $trblPropNPrefix {
  @for $i from 1 through 16 {
    .#{$prefix}-#{$i} {
      #{$property}: $i * $unit;
    }
  }
  @each $propertyAppendix, $apendix in $trblPropNAppendix {
    @for $i from 1 through 16 {
      .#{$prefix}#{$apendix}-#{$i} {
        #{$property}-#{$propertyAppendix}: $i * $unit;
      }
    }
  }
}

$borderPropNPrefix: (
  'border': 'b',
);
$borderWidthPropNAppnedix: (
  'width': '-t',
  'top-width': 't-t',
  'bottom-width': 'b-t',
  'block-width': 'y-t',
  'right-width': 'r-t',
  'left-width': 'l-t',
  'inline-width': 'x-t',
);
$unit: 1px;
@each $property, $prefix in $borderPropNPrefix {
  @for $i from 1 through 16 {
    .#{$prefix}-#{$i} {
      #{$property}: $i * $unit;
    }
  }
  @each $propertyAppendix, $apendix in $borderWidthPropNAppnedix {
    @for $i from 1 through 16 {
      .#{$prefix}#{$apendix}-#{$i} {
        #{$property}-#{$propertyAppendix}: $i * $unit;
      }
    }
  }
}
$borderRadiusPropNAppendix: (
  'radius': '-r',
  'top-left-radius': 'tl-r',
  'top-right-radius': 'tr-r',
  'bottom-left-radius': 'bl-r',
  'bottom-right-radius': 'br-r',
);
$unit: 4px;
@each $property, $prefix in $borderPropNPrefix {
  @for $i from 1 through 16 {
    .#{$prefix}-#{$i} {
      #{$property}: $i * $unit;
    }
  }
  .#{$prefix}-full {
    #{$property}: 9999px;
  }
  @each $propertyAppendix, $apendix in $borderRadiusPropNAppendix {
    @for $i from 1 through 16 {
      .#{$prefix}#{$apendix}-#{$i} {
        #{$property}-#{$propertyAppendix}: $i * $unit;
      }
    }
    .#{$prefix}#{$apendix}-full {
      #{$property}-#{$propertyAppendix}: 9999px;
    }
  }
}
$borderStylePropNValue: (
  'style': (
    'solid',
    'dashed',
    'dotted',
    'double',
    'hidden',
    'none',
  ),
);
@each $property, $prefix in $borderPropNPrefix {
  @each $propertyAppendix, $values in $borderStylePropNValue {
    @each $value in $values {
      .#{$prefix}-#{$propertyAppendix}-#{$value} {
        #{$property}-#{$propertyAppendix}: $value;
      }
    }
  }
}
